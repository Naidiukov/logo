// @! "do not remove comments below unless you know what you do!"
// @isDefault "true"
// @entity "inv_payers"
// @model "INV"
// @formType "auto"
// @caption "Дані особи"
// @description "Дані особи"
var disableFields = function (form, name, disabled) {
        for (let i = 0; i < name.length; i++) {
            form.queryById(name[i]).setDisabled(disabled);
        }
    },
    changeFieldsVisibilityById = function (form, name, hide) {
        for (let i = 0; i < name.length; i++) {
            hide ? form.queryById(name[i]).hide() : form.queryById(name[i]).show();
        }
    };
exports.formDef = {
    requiredFields: ['areaB', 'regionB', 'areaAddR', 'regionAddR', 'areaAddL'],
    defaults: {
        layout: {
            type: 'vbox',
            align: 'stretch'
        }
    },
    layout: {
        type: 'vbox',
        align: 'stretch'
    },
    items: [
        {
            defaults: {
                layout: {
                    type: 'vbox',
                    align: 'stretch'
                }
            },
            layout: {
                type: 'vbox',
                align: 'stretch'
            },
            items: [
                {
                    layout: {
                        type: "hbox",
                        align: 'middle'
                    },
                    margin: "0, 0, 2, 0", //top, right, buttom, left
                    items: [
                        {
                            attributeName: "personType",
                            fieldLabel: "Тип",
                            labelWidth: 170,
                            flex: 1,
                            listeners: {
                                change: function (ele, newValue, oldValue) {
                                    var form = ele.up('form');
                                    if (newValue && form) {
                                        disableFields(form, ['postIndex', 'email', 'phone', 'notes'], false);

                                        if (newValue == 'PHYSICAL') {
                                            INV.services.setCtrlVisibility([
                                                {name: 'idnCode', isVisible: true},
                                                {name: 'lastName', isVisible: true, isBlank: false},
                                                {name: 'prevLastName', isVisible: true},
                                                {name: 'firstName', isVisible: true, isBlank: false},
                                                {name: 'middleName', isVisible: true},
                                                {name: 'birthDate', isVisible: true},
                                                {name: 'nationality', isVisible: true},
                                                {name: 'gender', isVisible: true},
                                                {name: 'birthCertificate', isVisible: true},
                                                {name: 'birthCertifDate', isVisible: true},
                                                {name: 'birthCertifIssuedBy', isVisible: true},
                                                {name: 'deathCertificate', isVisible: true},
                                                {name: 'deathCertifDate', isVisible: true},
                                                {name: 'deathCertifIssuedBy', isVisible: true},
                                                {name: 'personNum', isVisible: true},
                                                {name: 'deathDate', isVisible: true},
                                                {name: 'EDDRecordNum', isVisible: true},
                                                {name: 'passportSeries', isVisible: true},
                                                {name: 'passportNumber', isVisible: true},
                                                {name: 'passportIssueDate', isVisible: true},
                                                {name: 'passportIssuedBy', isVisible: true},
                                                {name: 'passportValidToDate', isVisible: true},
                                                {name: 'idCardNumber', isVisible: true},
                                                {name: 'privilegePhysID', isVisible: true},
                                                {name: 'name', isVisible: false, nullVal: true, isBlank: true},
                                                {name: 'edrpou', isVisible: false, nullVal: true},
                                                {name: 'privilegeLegID', isVisible: false, nullVal: true},

                                                {name: 'countryB', isVisible: true},
                                                {name: 'areaB', isVisible: true},
                                                {name: 'regionB', isVisible: true},
                                                {name: 'settlementB', isVisible: true},

                                                {name: 'areaAddR', isVisible: true},
                                                {name: 'settlementAddR', isVisible: true},
                                                {name: 'streetTypeAddR', isVisible: true},
                                                {name: 'streetAddR', isVisible: true},
                                                {name: 'houseNumAddR', isVisible: true},
                                                {name: 'flatNumAddR', isVisible: true},

                                                {name: 'areaAddL', isVisible: true},
                                                {name: 'settlementAddL', isVisible: true},
                                                {name: 'streetTypeAddL', isVisible: true},
                                                {name: 'streetAddL', isVisible: true},
                                                {name: 'houseNumAddL', isVisible: true},
                                                {name: 'flatNumAddL', isVisible: true},

                                            ], form);
                                            changeFieldsVisibilityById(form, ['birthBlock', 'AddLBlock'], false);
                                            if (form.isNewInstance) {
                                                form.record.set('countryB', 333658698055681);
                                                form.record.set('nationality', 333658698055681);
                                            }
                                        }
                                        else {
                                            INV.services.setCtrlVisibility([
                                                {name: 'edrpou', isVisible: true},
                                                {name: 'name', isVisible: true, isBlank: false},
                                                {name: 'privilegeLegID', isVisible: true},
                                                {name: 'idnCode', isVisible: false, nullVal: true},
                                                {name: 'lastName', isVisible: false, nullVal: true, isBlank: true},
                                                {name: 'prevLastName', isVisible: false, nullVal: true},
                                                {name: 'firstName', isVisible: false, nullVal: true, isBlank: true},
                                                {name: 'middleName', isVisible: false, nullVal: true},
                                                {name: 'birthDate', isVisible: false, nullVal: true},
                                                {name: 'nationality', isVisible: false, nullVal: true},
                                                {name: 'gender', isVisible: false, nullVal: true},
                                                {name: 'birthCertificate', isVisible: false, nullVal: true},
                                                {name: 'birthCertifDate', isVisible: false, nullVal: true},
                                                {name: 'birthCertifIssuedBy', isVisible: false, nullVal: true},
                                                {name: 'deathCertificate', isVisible: false, nullVal: true},
                                                {name: 'deathCertifDate', isVisible: false, nullVal: true},
                                                {name: 'deathCertifIssuedBy', isVisible: false, nullVal: true},
                                                {name: 'personNum', isVisible: false, nullVal: true},
                                                {name: 'deathDate', isVisible: false, nullVal: true},
                                                {name: 'EDDRecordNum', isVisible: false, nullVal: true},
                                                {name: 'passportSeries', isVisible: false, nullVal: true},
                                                {name: 'passportNumber', isVisible: false, nullVal: true},
                                                {name: 'passportIssueDate', isVisible: false, nullVal: true},
                                                {name: 'passportIssuedBy', isVisible: false, nullVal: true},
                                                {name: 'passportValidToDate', isVisible: false, nullVal: true},
                                                {name: 'idCardNumber', isVisible: false, nullVal: true},
                                                {name: 'privilegePhysID', isVisible: false, nullVal: true},

                                                {name: 'countryB', isVisible: true, nullVal: true},
                                                {name: 'areaB', isVisible: true, nullVal: true},
                                                {name: 'regionB', isVisible: true, nullVal: true},
                                                {name: 'settlementB', isVisible: true, nullVal: true},

                                                {name: 'areaAddR', isVisible: true, nullVal: true},
                                                {name: 'settlementAddR', isVisible: true, nullVal: true},
                                                {name: 'streetTypeAddR', isVisible: true, nullVal: true},
                                                {name: 'streetAddR', isVisible: true, nullVal: true},
                                                {name: 'houseNumAddR', isVisible: true, nullVal: true},
                                                {name: 'flatNumAddR', isVisible: true, nullVal: true},

                                                {name: 'areaAddL', isVisible: true, nullVal: true},
                                                {name: 'settlementAddL', isVisible: true, nullVal: true},
                                                {name: 'streetTypeAddL', isVisible: true, nullVal: true},
                                                {name: 'streetAddL', isVisible: true, nullVal: true},
                                                {name: 'houseNumAddL', isVisible: true, nullVal: true},
                                                {name: 'flatNumAddL', isVisible: true, nullVal: true}

                                            ], form);
                                            changeFieldsVisibilityById(form, ['birthBlock', 'AddLBlock'], true);
                                        }
                                    } else {

                                        INV.services.setCtrlVisibility([
                                            {name: 'idnCode', isVisible: false, nullVal: true},
                                            {name: 'edrpou', isVisible: false, nullVal: true},
                                            {name: 'idnCode', isVisible: false, nullVal: true},
                                            {name: 'name', isVisible: false, nullVal: true},
                                            {name: 'lastName', isVisible: false, nullVal: true},
                                            {name: 'prevLastName', isVisible: false, nullVal: true},
                                            {name: 'firstName', isVisible: false, nullVal: true},
                                            {name: 'middleName', isVisible: false, nullVal: true},
                                            {name: 'birthDate', isVisible: false, nullVal: true},
                                            {name: 'nationality', isVisible: false, nullVal: true},
                                            {name: 'gender', isVisible: false, nullVal: true},
                                            {name: 'birthCertificate', isVisible: false, nullVal: true},
                                            {name: 'birthCertifDate', isVisible: false, nullVal: true},
                                            {name: 'birthCertifIssuedBy', isVisible: false, nullVal: true},
                                            {name: 'deathCertificate', isVisible: false, nullVal: true},
                                            {name: 'deathCertifDate', isVisible: false, nullVal: true},
                                            {name: 'deathCertifIssuedBy', isVisible: false, nullVal: true},
                                            {name: 'personNum', isVisible: false, nullVal: true},
                                            {name: 'deathDate', isVisible: false, nullVal: true},
                                            {name: 'EDDRecordNum', isVisible: false, nullVal: true},
                                            {name: 'passportSeries', isVisible: false, nullVal: true},
                                            {name: 'passportNumber', isVisible: false, nullVal: true},
                                            {name: 'passportIssueDate', isVisible: false, nullVal: true},
                                            {name: 'passportIssuedBy', isVisible: false, nullVal: true},
                                            {name: 'passportValidToDate', isVisible: false, nullVal: true},
                                            {name: 'idCardNumber', isVisible: false, nullVal: true},
                                            {name: 'privilegePhysID', isVisible: false, nullVal: true},
                                            {name: 'privilegeLegID', isVisible: false, nullVal: true},

                                            {name: 'countryB', isVisible: true, nullVal: true},
                                            {name: 'areaB', isVisible: true, nullVal: true},
                                            {name: 'regionB', isVisible: true, nullVal: true},
                                            {name: 'settlementB', isVisible: true, nullVal: true},

                                            {name: 'areaAddR', isVisible: true, nullVal: true},
                                            {name: 'settlementAddR', isVisible: true, nullVal: true},
                                            {name: 'streetTypeAddR', isVisible: true, nullVal: true},
                                            {name: 'streetAddR', isVisible: true, nullVal: true},
                                            {name: 'houseNumAddR', isVisible: true, nullVal: true},
                                            {name: 'flatNumAddR', isVisible: true, nullVal: true},

                                            {name: 'areaAddL', isVisible: true, nullVal: true},
                                            {name: 'settlementAddL', isVisible: true, nullVal: true},
                                            {name: 'streetTypeAddL', isVisible: true, nullVal: true},
                                            {name: 'streetAddL', isVisible: true, nullVal: true},
                                            {name: 'houseNumAddL', isVisible: true, nullVal: true},
                                            {name: 'flatNumAddL', isVisible: true, nullVal: true}
                                        ], form);
                                        changeFieldsVisibilityById(form, ['birthBlock', 'AddLBlock'], true);
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    layout: {
                        type: "hbox",
                        align: 'middle'
                    },
                    flex: 1,
                    margin: "0, 0, 2, 0", //top, right, buttom, left
                    items: [
                        {
                            attributeName: "name",
                            itemId: "name",
                            xtype: 'textfield',
                            hidden: true,
                            maxLength: 240,
                            labelWidth: 170,
                            rows: 1,
                            flex: 1
                        },
                        {
                            attributeName: "lastName",
                            xtype: 'textfield',
                            itemId: "lastName",
                            hidden: true,
                            maxLength: 240,
                            labelWidth: 170,
                            rows: 1,
                            flex: 1
                        },
                        {
                            attributeName: "firstName",
                            xtype: 'textfield',
                            itemId: "firstName",
                            maxLength: 100,
                            labelWidth: 170,
                            hidden: true,
                            rows: 1,
                            allowBlank: false,
                            flex: 1
                        }
                    ]
                },
                {
                    layout: {
                        type: "hbox",
                        align: 'middle'
                    },
                    flex: 1,
                    margin: "0, 0, 2, 0", //top, right, buttom, left
                    items: [
                        {
                            attributeName: "prevLastName",
                            itemId: "prevLastName",
                            xtype: 'textfield',
                            hidden: true,
                            maxLength: 100,
                            labelWidth: 170,
                            flex: 1,
                            rows: 1
                        },
                        {
                            attributeName: "middleName",
                            itemId: "middleName",
                            xtype: 'textfield',
                            hidden: true,
                            maxLength: 100,
                            labelWidth: 170,
                            flex: 1,
                            rows: 1
                        },
                        {
                            attributeName: "birthDate",
                            itemId: "birthDate",
                            hidden: true,
                            flex: 1,
                            labelWidth: 170
                        },
                        {
                            attributeName: "gender",
                            itemId: "gender",
                            hidden: true,
                            flex: 1,
                            labelWidth: 170,
                            width: 400
                        }
                    ]
                },
                {
                    layout: {
                        type: "hbox",
                        align: 'middle'
                    },
                    flex: 1,
                    margin: "0, 0, 2, 0", //top, right, buttom, left
                    items: [
                        {
                            attributeName: "nationality",
                            itemId: "nationality",
                            hidden: true,
                            flex: 1,
                            labelWidth: 170,
                            width: 400
                        },
                        {
                            attributeName: "birthDate",
                            itemId: "birthDate",
                            hidden: true,
                            flex: 1,
                            labelWidth: 170
                        },
                        {
                            attributeName: "gender",
                            itemId: "gender",
                            hidden: true,
                            flex: 1,
                            labelWidth: 170,
                            width: 400
                        }
                    ]
                },
                {
                    layout: {
                        type: "hbox",
                        align: 'middle'
                    },
                    flex: 1,
                    margin: "0, 0, 2, 0", //top, right, buttom, left
                    items: [
                        {
                            attributeName: "birthCertificate",
                            itemId: "birthCertificate",
                            xtype: 'textfield',
                            hidden: true,
                            maxLength: 100,
                            flex: 1,
                            labelWidth: 170,
                            rows: 1
                        },
                        {
                            attributeName: "birthCertifDate",
                            itemId: "birthCertifDate",
                            hidden: true,
                            flex: 1,
                            labelWidth: 170
                        },
                        {
                            attributeName: "birthCertifIssuedBy",
                            itemId: "birthCertifIssuedBy",
                            hidden: true,
                            rows: 1,
                            whereList: {
                                byType: {
                                    expression: '[type]',
                                    condition: '=',
                                    values: {type: 'CERTIF'}
                                }
                            },
                            listeners: {
                                // beforeQuerySend: function () {
                                //     if (this.getValue()) {
                                //         this.store.ubRequest.whereList.byCurrID = {
                                //             expression: 'ID',
                                //             condition: "=",
                                //             values: {ID: this.getValue()}
                                //         };
                                //         this.store.ubRequest.logicalPredicates = ["([byUser] or [byCurrID])"];
                                //     } else {
                                //         this.store.ubRequest.logicalPredicates = [];
                                //     }
                                //
                                // }
                            },
                            labelWidth: 170,
                            flex: 1,
                            width: 400
                        }
                    ]
                },
                {
                    layout: {
                        type: "hbox",
                        align: 'middle'
                    },
                    flex: 1,
                    margin: "0, 0, 2, 0", //top, right, buttom, left
                    items: [
                        {
                            attributeName: "deathCertificate",
                            itemId: "deathCertificate",
                            xtype: 'textfield',
                            hidden: true,
                            maxLength: 100,
                            flex: 1,
                            labelWidth: 170,
                            rows: 1
                        },
                        {
                            attributeName: "deathCertifDate",
                            itemId: "deathCertifDate",
                            hidden: true,
                            flex: 1,
                            labelWidth: 170
                        },
                        {
                            attributeName: "deathCertifIssuedBy",
                            itemId: "deathCertifIssuedBy",
                            hidden: true,
                            whereList: {
                                byType: {
                                    expression: '[type]',
                                    condition: '=',
                                    values: {type: 'CERTIF'}
                                }
                            },
                            listeners: {
                                // beforeQuerySend: function () {
                                //     if (this.getValue()) {
                                //         this.store.ubRequest.whereList.byCurrID = {
                                //             expression: 'ID',
                                //             condition: "=",
                                //             values: {ID: this.getValue()}
                                //         };
                                //         this.store.ubRequest.logicalPredicates = ["([byUser] or [byCurrID])"];
                                //     } else {
                                //         this.store.ubRequest.logicalPredicates = [];
                                //     }
                                //
                                // }
                            },
                            rows: 1,
                            labelWidth: 170,
                            flex: 1,
                            width: 400
                        }
                    ]
                },
                {
                    layout: {
                        type: "hbox",
                        align: 'middle'
                    },
                    flex: 1,
                    margin: "0, 0, 2, 0", //top, right, buttom, left
                    items: [
                        {
                            attributeName: "personNum",
                            itemId: "personNum",
                            xtype: 'textfield',
                            hidden: true,
                            maxLength: 100,
                            flex: 1,
                            labelWidth: 170,
                            rows: 1
                        },
                        {
                            attributeName: "deathDate",
                            itemId: "deathDate",
                            hidden: true,
                            flex: 1,
                            labelWidth: 170
                        },
                        {
                            attributeName: "EDDRecordNum",
                            itemId: "EDDRecordNum",
                            hidden: true,
                            rows: 1,
                            labelWidth: 170,
                            flex: 1,
                            width: 400
                        }
                    ]
                },
                {
                    layout: {
                        type: "hbox",
                        align: 'middle'
                    },
                    items: [
                        {
                            attributeName: "idnCode",
                            itemId: "idnCode",
                            maxLength: 10,
                            hidden: true,
                            maxWidth: 310,
                            labelWidth: 170,
                            flex: 1
                        },
                        {
                            attributeName: "edrpou",
                            itemId: "edrpou",
                            maxLength: 9,
                            hidden: true,
                            maxWidth: 310,
                            labelWidth: 170,
                            flex: 1
                        },
                        {
                            layout: {
                                type: "hbox",
                                align: 'middle'
                            },
                            items: [
                                {
                                    attributeName: "passportSeries",
                                    itemId: "passportSeries",
                                    fieldLabel: "Серія/номер паспорта",
                                    hidden: true,
                                    maxLength: 2,
                                    labelWidth: 170,
                                    margin: "0, 5, 0, 0",
                                    width: 220,
                                    listeners: {
                                        change: function (fld, newV, oldV) {
                                            let numberCtrl = fld.up('form').getField('passportNumber');
                                            if (newV) {
                                                fld.setValue(newV.toUpperCase());
                                                fld.setAllowBlank(false);
                                                numberCtrl.setAllowBlank(false);
                                            } else if (!numberCtrl.getValue()) {
                                                fld.up('form').getField('passportNumber').setAllowBlank(true);
                                                fld.setAllowBlank(true);
                                            }
                                        }
                                    },
                                    validator: function (v) {
                                        return v && v.match(/[А-ЯЁЇІЄҐ]+$/g) || !v ? true : 'Не припустимий формат!';
                                    }
                                },
                                {
                                    attributeName: "passportNumber",
                                    itemId: "passportNumber",
                                    hidden: true,
                                    fieldLabel: "",
                                    maxLength: 6,
                                    width: 100,
                                    margin: "0, 15, 0, 0", //top, right, buttom, left
                                    listeners: {
                                        change: function (fld, newV, oldV) {
                                            let seriesCtrl = fld.up('form').getField('passportSeries');
                                            if (newV) {
                                                seriesCtrl.setAllowBlank(false);
                                                fld.setAllowBlank(false);
                                            } else if (!seriesCtrl.getValue()) {
                                                seriesCtrl.setAllowBlank(true);
                                                fld.setAllowBlank(true);
                                            }
                                        }
                                    },
                                    validator: function (v) {
                                        return v && v.match(/^[0-9]{6}$/g) || !v ? true : 'Не припустимий формат!';
                                    }
                                }
                            ]
                        },
                        {
                            attributeName: "passportIssueDate",
                            itemId: "passportIssueDate",
                            hidden: true,
                            flex: 1,
                            labelWidth: 170
                        },
                        {
                            attributeName: "passportIssuedBy",
                            itemId: "passportIssuedBy",
                            hidden: true,
                            rows: 1,
                            labelWidth: 170,
                            flex: 1,
                            listeners: {
                                // beforeQuerySend: function () {
                                //     if (this.getValue()) {
                                //         this.store.ubRequest.whereList.byCurrID = {
                                //             expression: 'ID',
                                //             condition: "=",
                                //             values: {ID: this.getValue()}
                                //         };
                                //         this.store.ubRequest.logicalPredicates = ["([byUser] or [byCurrID])"];
                                //     } else {
                                //         this.store.ubRequest.logicalPredicates = [];
                                //     }
                                //
                                // }
                            },
                            whereList: {
                                byType: {
                                    expression: '[type]',
                                    condition: '=',
                                    values: {type: 'PASSPORT'}
                                }
                            }
                        }

                    ]
                },
                {
                    layout: {
                        type: "hbox",
                        align: 'middle'
                    },
                    flex: 1,
                    margin: "0, 0, 2, 0", //top, right, buttom, left
                    items: [
                        {
                            layout: {
                                type: "hbox"
                            },
                            flex: 1,
                            items: [
                                {
                                    attributeName: "idCardNumber",
                                    itemId: "idCardNumber",
                                    fieldLabel: "№ паспорта нового зразка",
                                    hidden: true,
                                    labelWidth: 170,
                                    maxLength: 9,
                                    flex: 1
                                },
                                {
                                    attributeName: "passportValidToDate",
                                    itemId: "passportValidToDate",
                                    flex: 1,
                                    labelWidth: 170
                                },
                                {
                                    labelWidth: 170,
                                    flex: 1
                                }
                            ]
                        }
                    ]
                },
                {
                    xtype: 'fieldset',
                    margin: "0, 15, 10, 15",
                    title: 'Місце народження',
                    hidden: true,
                    itemId: 'birthBlock',
                    collapsible: true,
                    layout: {
                        type: "vbox",
                        align: "stretch"
                    },
                    defaults: {
                        flex: 1
                    },
                    items: [
                        {
                            layout: {
                                type: "hbox",
                                align: 'middle'
                            },
                            flex: 1,
                            margin: "0, 0, 2, 0", //top, right, buttom, left
                            items: [
                                {
                                    attributeName: "countryB",
                                    itemId: "countryB",
                                    flex: 1,
                                    listeners: {
                                        change(fld, newValue, oldValue) {

                                            let form = this.up('form');
                                            if (fld.getRawValue() !== 'Україна') {
                                                INV.services.setCtrlVisibility(
                                                    [
                                                        {name: 'natalPlaceB', isVisible: true},
                                                        {name: 'areaB', isVisible: false, nullVal: true},
                                                        {name: 'regionB', isVisible: false, nullVal: true},
                                                        {name: 'settlementB', isVisible: false, nullVal: true}
                                                    ], form)
                                            } else {
                                                INV.services.setCtrlVisibility(
                                                    [
                                                        {name: 'natalPlaceB', isVisible: false, nullVal: true},
                                                        {name: 'areaB', isVisible: true},
                                                        {name: 'regionB', isVisible: true},
                                                        {name: 'settlementB', isVisible: true}
                                                    ], form)
                                            }
                                        }
                                    }
                                },
                                {
                                    attributeName: "natalPlaceB",
                                    itemId: "natalPlaceB",
                                    hidden: true,
                                    flex: 1
                                },
                                {
                                    xtype: 'ubcombobox',
                                    valueField: 'areaName',
                                    fieldLabel: $App.domainInfo.get('inv_payers').attr('areaB').caption,
                                    displayField: 'areaName',
                                    disableContextMenu: true,
                                    itemId: "areaB",
                                    ubRequest: {
                                        entity: "pgo_ngoDict",
                                        method: "select",
                                        fieldList: ['areaName'],
                                        groupList: ['areaName'],
                                        orderList: {sortOrder: {expression: "areaName", order: 'asc'}}
                                    },
                                    flex: 1,
                                    listeners: {
                                        change(fld, newValue, oldValue) {
                                            let form = this.up('form'),
                                                regionBCtrl = form.queryById('regionB'),
                                                settlementBCtrl = form.queryById('settlementB');
                                            if (newValue) {
                                                form.record.set('areaB', newValue);
                                                fld.store.reload();
                                                INV.services.setWhereList(regionBCtrl, 'byAreaName', 'areaName', newValue);
                                                if (oldValue) {
                                                    regionBCtrl.setValue(null);
                                                    form.record.set('regionB', null);
                                                    settlementBCtrl.setValue(null);
                                                }
                                            } else {
                                                form.record.set('areaB', null);
                                                INV.services.setWhereList(regionBCtrl, 'byAreaName', 'areaName', true);
                                                regionBCtrl.setValue(null);
                                                INV.services.setWhereList(settlementBCtrl, 'byRegionName', 'pgoDictID.regionName', true);
                                                settlementBCtrl.setValue(null);
                                            }
                                            regionBCtrl.store.reload();
                                        },
                                        beforeRender: function () {
                                            this.store.ubRequest.fieldList = ['areaName']
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            layout: {
                                type: "hbox",
                                align: 'middle'
                            },
                            flex: 1,
                            margin: "0, 0, 2, 0", //top, right, buttom, left
                            items: [
                                {
                                    xtype: 'ubcombobox',
                                    valueField: 'regionName',
                                    displayField: 'regionName',
                                    fieldLabel: $App.domainInfo.get('inv_payers').attr('regionB').caption,
                                    itemId: "regionB",
                                    flex: 1,
                                    ubRequest: {
                                        entity: "pgo_ngoDict",
                                        method: "select",
                                        fieldList: ['regionName'],
                                        groupList: ['regionName'],
                                        orderList: {sortOrder: {expression: "regionName", order: 'asc'}}
                                    },
                                    listeners: {
                                        change(fld, newValue, oldValue) {
                                            let form = this.up('form'),
                                                settlementBCtrl = form.queryById('settlementB');
                                            if (newValue) {
                                                form.record.set('regionB', newValue);
                                                INV.services.setWhereList(settlementBCtrl, 'byRegionName', 'pgoDictID.regionName', fld.getRawValue());

                                            } else {
                                                form.record.set('regionB', null);
                                                INV.services.setWhereList(settlementBCtrl, 'byRegionName', 'pgoDictID.regionName', true);
                                                settlementBCtrl.setValue(null);
                                            }
                                            settlementBCtrl.store.reload();
                                        },
                                        beforeRender: function () {
                                            this.store.ubRequest.fieldList = ['regionName']
                                        }
                                    }
                                },
                                {
                                    xtype: "ubcombobox",
                                    attributeName: "settlementB",
                                    displayField: 'governmentShortName',
                                    itemId: "settlementB",
                                    flex: 1,
                                    fieldList: ["ID", "governmentShortName", "pgoDictID.regionName"],
                                    whereList: {}
                                }
                            ]
                        }
                    ]
                },
                {
                    xtype: 'fieldset',
                    margin: "0, 15, 10, 15",
                    title: 'Адреса реєстрації',
                    itemId: 'AddRBlock',
                    collapsible: true,
                    layout: {
                        type: "vbox",
                        align: "stretch"
                    },
                    defaults: {
                        flex: 1
                    },
                    items: [
                        {
                            layout: {
                                type: "hbox",
                                align: 'middle'
                            },
                            flex: 1,
                            margin: "0, 0, 2, 0", //top, right, buttom, left
                            items: [
                                {
                                    xtype: 'ubcombobox',
                                    valueField: 'areaName',
                                    displayField: 'areaName',
                                    fieldLabel: $App.domainInfo.get('inv_payers').attr('areaAddR').caption,
                                    disableContextMenu: true,
                                    itemId: "areaAddR",
                                    ubRequest: {
                                        entity: "pgo_ngoDict",
                                        method: "select",
                                        fieldList: ['areaName'],
                                        groupList: ['areaName'],
                                        orderList: {sortOrder: {expression: "areaName", order: 'asc'}}
                                    },
                                    flex: 1,
                                    listeners: {
                                        change(fld, newValue, oldValue) {
                                            let form = this.up('form'),
                                                regionAddRCtrl = form.queryById('regionAddR'),
                                                settlementAddRCtrl = form.queryById('settlementAddR');
                                            if (newValue) {
                                                form.record.set('areaAddR', newValue);
                                                fld.store.reload();
                                                INV.services.setWhereList(regionAddRCtrl, 'byAreaName', 'areaName', newValue);
                                                if (oldValue) {
                                                    regionAddRCtrl.setValue(null);
                                                    form.record.set('regionAddR', null);

                                                    settlementAddRCtrl.setValue(null);
                                                }

                                            } else {
                                                form.record.set('areaAddR', null);
                                                INV.services.setWhereList(regionAddRCtrl, 'byAreaName', 'areaName', -1);
                                                regionAddRCtrl.setValue(null);

                                                INV.services.setWhereList(settlementAddRCtrl, 'byRegionName', 'pgoDictID.regionName', -1);
                                                settlementAddRCtrl.setValue(null);
                                            }
                                            regionAddRCtrl.store.reload();
                                        },
                                        beforeRender: function () {
                                            this.store.ubRequest.fieldList = ['areaName']
                                        }
                                    }
                                },
                                {
                                    xtype: 'ubcombobox',
                                    valueField: 'regionName',
                                    displayField: 'regionName',
                                    fieldLabel: $App.domainInfo.get('inv_payers').attr('regionAddR').caption,
                                    itemId: "regionAddR",
                                    flex: 1,
                                    ubRequest: {
                                        entity: "pgo_ngoDict",
                                        method: "select",
                                        fieldList: ['regionName'],
                                        groupList: ['regionName'],
                                        orderList: {sortOrder: {expression: "regionName", order: 'asc'}}
                                    },
                                    listeners: {
                                        change(fld, newValue, oldValue) {
                                            let form = this.up('form'),
                                                settlementAddRCtrl = form.queryById('settlementAddR');
                                            if (newValue) {
                                                form.record.set('regionAddR', newValue);
                                                INV.services.setWhereList(settlementAddRCtrl, 'byRegionName', 'pgoDictID.regionName', fld.getRawValue());
                                                if (oldValue) {

                                                    settlementAddRCtrl.setValue(null);
                                                }

                                            } else {
                                                form.record.set('regionAddR', null);

                                                INV.services.setWhereList(settlementAddRCtrl, 'byRegionName', 'pgoDictID.regionName', -1);
                                                settlementAddRCtrl.setValue(null);
                                            }
                                            settlementAddRCtrl.store.reload();
                                        },
                                        beforeRender: function () {
                                            this.store.ubRequest.fieldList = ['regionName']
                                        }
                                    }
                                }

                            ]
                        },
                        {
                            layout: {
                                type: "hbox",
                                align: 'middle'
                            },
                            flex: 1,
                            margin: "0, 0, 2, 0", //top, right, buttom, left
                            items: [{
                                attributeName: "settlementAddR",
                                displayField: 'governmentShortName',
                                fieldList: ["ID", "governmentShortName"],
                                itemId: "settlementAddR",
                                flex: 1,
                                whereList: {},
                                listeners: {
                                    change(fld, newValue, oldValue) {
                                        let form = this.up('form'),
                                            streetAddRCtrl = form.queryById('streetAddR');
                                        if (newValue) {
                                            INV.services.setWhereList(streetAddRCtrl, 'bySettlement', 'settlementDictID', newValue);
                                            if (oldValue) {
                                                streetAddRCtrl.setValue(null);
                                            }

                                        } else {

                                            INV.services.setWhereList(streetAddRCtrl, 'bySettlement', 'settlementDictID', -1);
                                            streetAddRCtrl.setValue(null);
                                        }
                                        streetAddRCtrl.store.reload();
                                    }
                                }
                            }]
                        },
                        {
                            layout: {
                                type: "hbox",
                                align: 'middle'
                            },
                            flex: 1,
                            margin: "0, 0, 2, 0", //top, right, buttom, left
                            items: [
                                {
                                    attributeName: "streetTypeAddR",
                                    itemId: "streetTypeAddR",
                                    flex: 1,
                                    listeners: {
                                        change(fld, newValue, oldValue) {
                                            let form = this.up('form'),
                                                streetAddRCtrl = form.queryById('streetAddR');
                                            if (newValue) {
                                                INV.services.setWhereList(streetAddRCtrl, 'byStreetType', 'streetType', newValue);
                                            } else {
                                                INV.services.setWhereList(streetAddRCtrl, 'byStreetType', 'streetType', true);
                                                streetAddRCtrl.setValue(null);
                                            }
                                            streetAddRCtrl.store.reload();
                                        }
                                    }
                                },
                                {
                                    attributeName: "streetAddR",
                                    itemId: "streetAddR",
                                    flex: 1,
                                    whereList: {}
                                },
                                {
                                    attributeName: "houseNumAddR",
                                    itemId: "houseNumAddR",
                                    flex: 1
                                },
                                {
                                    attributeName: "flatNumAddR",
                                    itemId: "flatNumAddR",
                                    flex: 1
                                }
                            ]
                        },
                        {
                            attributeName: "postIndex",
                            itemId: "postIndex",
                            fieldLabel: "Індекс",
                            disabled: true,
                            maxLength: 5
                        }
                    ]
                },
                {
                    xtype: 'fieldset',
                    margin: "0, 15, 10, 15",
                    title: 'Адреса проживання',
                    hidden: true,
                    itemId: 'AddLBlock',
                    collapsible: true,
                    layout: {
                        type: "vbox",
                        align: "stretch"
                    },
                    defaults: {
                        flex: 1
                    },
                    items: [
                        {
                            layout: {
                                type: "hbox",
                                align: 'middle'
                            },
                            flex: 1,
                            margin: "0, 0, 2, 0", //top, right, buttom, left
                            items: [
                                {
                                    xtype: 'ubcombobox',
                                    valueField: 'areaName',
                                    displayField: 'areaName',
                                    fieldLabel: $App.domainInfo.get('inv_payers').attr('areaAddL').caption,
                                    disableContextMenu: true,
                                    itemId: "areaAddL",
                                    ubRequest: {
                                        entity: "pgo_ngoDict",
                                        method: "select",
                                        fieldList: ['areaName'],
                                        groupList: ['areaName'],
                                        orderList: {sortOrder: {expression: "areaName", order: 'asc'}}
                                    },
                                    flex: 1,
                                    listeners: {
                                        change(fld, newValue, oldValue) {
                                            let form = this.up('form'),
                                                settlementAddLCtrl = form.queryById('settlementAddL');
                                            if (newValue) {
                                                form.record.set('areaAddL', newValue);
                                                INV.services.setWhereList(settlementAddLCtrl, 'byAreaName', 'pgoDictID.areaName', fld.getRawValue());
                                                if (oldValue) {
                                                    settlementAddLCtrl.setValue(null);
                                                }

                                            } else {
                                                form.record.set('areaAddL', null);
                                                INV.services.setWhereList(settlementAddLCtrl, 'byAreaName', 'pgoDictID.areaName', -1);
                                                settlementAddLCtrl.setValue(null);
                                            }
                                            settlementAddLCtrl.store.reload();
                                        },
                                        beforeRender: function () {
                                            this.store.ubRequest.fieldList = ['areaName']
                                        }
                                    }
                                },
                                {
                                    attributeName: "settlementAddL",
                                    itemId: "settlementAddL",
                                    flex: 1,
                                    whereList: {}
                                }
                            ]
                        },
                        {
                            layout: {
                                type: "hbox",
                                align: 'middle'
                            },
                            flex: 1,
                            margin: "0, 0, 2, 0", //top, right, buttom, left
                            items: [
                                {
                                    attributeName: "streetTypeAddL",
                                    itemId: "streetTypeAddL",
                                    flex: 1,
                                    listeners: {
                                        change(fld, newValue, oldValue) {
                                            let form = this.up('form'),
                                                streetAddLCtrl = form.queryById('streetAddL');
                                            if (newValue) {
                                                INV.services.setWhereList(streetAddLCtrl, 'byStreetType', 'streetType', newValue);
                                            } else {
                                                INV.services.setWhereList(streetAddLCtrl, 'byStreetType', 'streetType', true);
                                                streetAddLCtrl.setValue(null);
                                            }
                                            streetAddLCtrl.store.reload();
                                        }
                                    }
                                },
                                {
                                    attributeName: "streetAddL",
                                    itemId: "streetAddL",
                                    flex: 1,
                                    whereList: {}
                                },
                                {
                                    attributeName: "houseNumAddL",
                                    itemId: "houseNumAddL",
                                    flex: 1
                                },
                                {
                                    attributeName: "flatNumAddL",
                                    itemId: "flatNumAddL",
                                    flex: 1
                                }
                            ]
                        }
                    ]
                },
                {
                    xtype: 'fieldset',
                    margin: "0, 15, 10, 15",
                    title: 'Імпортована адреса',
                    collapsible: true,
                    layout: {
                        type: "vbox",
                        align: "stretch"
                    },
                    defaults: {
                        flex: 1
                    },
                    items: [
                        {
                            layout: {
                                type: "hbox",
                                align: 'middle'
                            },
                            flex: 1,
                            margin: "0, 0, 2, 0", //top, right, buttom, left
                            items: [
                                {
                                    layout: {
                                        type: "hbox"
                                    },
                                    flex: 1,
                                    items: [
                                        {
                                            attributeName: "natalPlace",
                                            itemId: "natalPlace",
                                            readOnly: true,
                                            labelWidth: 170,
                                            maxLength: 9,
                                            flex: 1
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            layout: {
                                type: "hbox",
                                align: 'middle'
                            },
                            flex: 1,
                            margin: "0, 0, 2, 0", //top, right, buttom, left
                            items: [
                                {
                                    attributeName: "country",
                                    itemId: "country",
                                    xtype: 'textfield',
                                    readOnly: true,
                                    maxLength: 100,
                                    flex: 1,
                                    labelWidth: 170,
                                    rows: 1
                                },
                                {
                                    attributeName: "area",
                                    itemId: "area",
                                    readOnly: true,
                                    flex: 1,
                                    labelWidth: 170
                                },
                                {
                                    attributeName: "settlement",
                                    itemId: "settlement",
                                    readOnly: true,
                                    rows: 1,
                                    labelWidth: 170,
                                    flex: 1,
                                    width: 400
                                }
                            ]
                        },
                        {
                            layout: {
                                type: "hbox",
                                align: 'middle'
                            },
                            margin: "0, 0, 2, 0", //top, right, buttom, left
                            items: [
                                {
                                    attributeName: "addressAtuID",
                                    itemId: "addressAtuID",
                                    xtype: 'textfield',
                                    readOnly: true,
                                    fieldLabel: "Адреса реєстрації",
                                    margin: "5, 15, 0, 15", //top, right, buttom, left
                                    labelWidth: 170,
                                    flex: 7,
                                    rows: 1
                                },
                                {
                                    attributeName: "address",
                                    itemId: "address",
                                    xtype: 'textfield',
                                    readOnly: true,
                                    fieldLabel: "",
                                    margin: "0, 15, 0, 0", //top, right, buttom, left
                                    labelWidth: 170,
                                    flex: 7,
                                    rows: 1
                                }
                            ]
                        },
                        {
                            layout: {
                                type: "hbox",
                                align: 'middle'
                            },
                            margin: "0, 0, 2, 0", //top, right, buttom, left
                            items: [
                                {
                                    attributeName: "birthPlaceAtuID",
                                    itemId: "birthPlaceAtuID",
                                    readOnly: true,
                                    disableContextMenu: true,
                                    labelWidth: 170,
                                    flex: 7
                                },
                                {
                                    attributeName: "birthPlace",
                                    itemId: "birthPlace",
                                    xtype: 'textfield',
                                    readOnly: true,
                                    fieldLabel: "",
                                    margin: "0, 15, 0, 0", //top, right, buttom, left
                                    labelWidth: 170,
                                    flex: 7,
                                    rows: 1
                                }
                            ]
                        }
                    ]
                },
                {
                    layout: {
                        type: "hbox",
                        align: 'middle'
                    },
                    flex: 1,
                    margin: "0, 0, 2, 0", //top, right, buttom, left
                    items: [
                        {
                            attributeName: "email",
                            itemId: "email",
                            disabled: true,
                            fieldLabel: "Електронна пошта",
                            xtype: 'textfield',
                            labelWidth: 170,
                            flex: 1
                        },
                        {
                            layout: {
                                type: "hbox"
                            },
                            flex: 1,
                            items: [
                                {
                                    attributeName: "phone",
                                    itemId: "phone",
                                    disabled: true,
                                    fieldLabel: "Номер телефону",
                                    labelWidth: 170,
                                    flex: 1
                                }
                            ]
                        }
                    ]
                },
                {
                    layout: {
                        type: "hbox",
                        align: 'middle'
                    },
                    flex: 1,
                    margin: "0, 0, 2, 0", //top, right, buttom, left
                    items: [
                        {
                            attributeName: "privilegeStartDate",
                            itemId: "privilegeStartDate",
                            fieldLabel: "Дата початку дії пільги",
                            labelWidth: 170,
                            flex: 1,
							maxValue: new Date(),
							validator: function (v) {
								let privilegeEndDateRecord = this.up('form').record.get('privilegeEndDate'),
									privilegeEndDate = privilegeEndDateRecord && new Date(privilegeEndDateRecord) || null,
									thisValue = this.getValue() && new Date(this.getValue()) || null;

								if (v && thisValue instanceof Date && privilegeEndDate && privilegeEndDate instanceof Date && thisValue.setHours(0, 0, 0, 0) > (privilegeEndDate).setHours(0, 0, 0, 0)) return 'Дата має бути менше за "Дату закінчення дії пільги"';
								else return true;
							}
                        },
                        {
                            attributeName: "privilegeEndDate",
                            itemId: "privilegeEndDate",
                            fieldLabel: "Дата закінчення дії пільги",
                            labelWidth: 190,
                            flex: 1,
							validator: function (v) {
								let privilegeStartDateRecord = this.up('form').record.get('privilegeStartDate'),
									privilegeStartDate = new Date(privilegeStartDateRecord),
									thisValue = this.getValue() && new Date(this.getValue()) || null;

								if (v && thisValue instanceof Date && privilegeStartDate && privilegeStartDate instanceof Date && thisValue.setHours(0, 0, 0, 0) < (privilegeStartDate).setHours(0, 0, 0, 0)) return 'Дата має бути більша за "Дату початку дії пільги"';
								else return true;
							},
							listeners: {
								change: function (fld) {
									this.up('form').getField('privilegeStartDate').setAllowBlank(!this.getValue());
								}
							}
                        }
                    ]
                },
                {
                    layout: {
                        type: "hbox"
                    },
                    flex: 1,
                    items: [
                        {
                            attributeName: "privilegePhysID",
                            itemId: "privilegePhysID",
                            hidden: true,
                            fieldLabel: "Пільгова категорія",
                            labelWidth: 170,
                            flex: 1,
                            /*listeners: {
                                change: function (ele, newValue, oldValue) {
                                    var form = ele.up('form');
                                    newValue && form ? form.queryById('privilegeStartDate').setAllowBlank(false) : form.queryById('privilegeStartDate').setAllowBlank(true);
                                }
                            }*/
                        },
                        {
                            attributeName: "privilegeLegID",
                            itemId: "privilegeLegID",
                            hidden: true,
                            fieldLabel: "Пільгова категорія",
                            labelWidth: 170,
                            flex: 1,
                            /*listeners: {
                                change: function (ele, newValue, oldValue) {
                                    var form = ele.up('form');
                                    newValue && form ? form.queryById('privilegeStartDate').setAllowBlank(false) : form.queryById('privilegeStartDate').setAllowBlank(true);
                                }
                            }*/
                        }
                    ]
                },
                {
                    attributeName: "notes",
                    itemId: "notes",
                    disabled: true,
                    maxLength: 4000,
                    labelWidth: 170
                }
            ]
        }
    ]
};
